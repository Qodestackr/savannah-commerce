# Generated by Django 4.2.7 on 2025-09-26 06:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="SecurityEvent",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "event_category",
                    models.CharField(
                        choices=[
                            ("AUTH_FAILURE", "Authentication Failure"),
                            ("PERMISSION_VIOLATION", "Permission Violation"),
                            ("SUSPICIOUS_PATTERN", "Suspicious Activity Pattern"),
                            ("DATA_BREACH_ATTEMPT", "Potential Data Breach"),
                            ("SYSTEM_COMPROMISE", "System Compromise"),
                            ("POLICY_VIOLATION", "Policy Violation"),
                        ],
                        db_index=True,
                        max_length=30,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("INFO", "Informational"),
                            ("WARNING", "Warning"),
                            ("ERROR", "Error"),
                            ("CRITICAL", "Critical"),
                        ],
                        db_index=True,
                        max_length=10,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField()),
                (
                    "raw_data",
                    models.JSONField(
                        default=dict, help_text="Raw event data for investigation"
                    ),
                ),
                ("source_ip", models.GenericIPAddressField(db_index=True)),
                ("user_agent", models.TextField(blank=True)),
                ("is_resolved", models.BooleanField(db_index=True, default=False)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("resolution_notes", models.TextField(blank=True)),
                ("auto_response_taken", models.BooleanField(default=False)),
                (
                    "response_actions",
                    models.JSONField(default=list, help_text="Automated actions taken"),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_security_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["severity", "is_resolved"],
                        name="core_securi_severit_1b77c4_idx",
                    ),
                    models.Index(
                        fields=["event_category", "created_at"],
                        name="core_securi_event_c_abf0c3_idx",
                    ),
                    models.Index(
                        fields=["source_ip", "created_at"],
                        name="core_securi_source__811fef_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="DataAccessLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "access_type",
                    models.CharField(
                        choices=[
                            ("READ", "Data Read"),
                            ("SEARCH", "Data Search"),
                            ("EXPORT", "Data Export"),
                            ("BULK_READ", "Bulk Data Access"),
                            ("REPORT", "Report Generation"),
                        ],
                        db_index=True,
                        max_length=20,
                    ),
                ),
                ("resource_type", models.CharField(db_index=True, max_length=100)),
                (
                    "resource_ids",
                    models.JSONField(help_text="List of accessed resource IDs"),
                ),
                ("record_count", models.PositiveIntegerField(default=1)),
                ("ip_address", models.GenericIPAddressField(db_index=True)),
                ("user_agent", models.TextField(blank=True)),
                ("api_endpoint", models.CharField(blank=True, max_length=255)),
                (
                    "query_filters",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Applied filters/search terms",
                    ),
                ),
                ("is_suspicious", models.BooleanField(db_index=True, default=False)),
                (
                    "risk_score",
                    models.IntegerField(
                        default=0, help_text="Calculated risk score 0-100"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="data_access_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "created_at"],
                        name="core_dataac_user_id_c6ea17_idx",
                    ),
                    models.Index(
                        fields=["resource_type", "created_at"],
                        name="core_dataac_resourc_2fa5a8_idx",
                    ),
                    models.Index(
                        fields=["is_suspicious"], name="core_dataac_is_susp_e7cc74_idx"
                    ),
                    models.Index(
                        fields=["risk_score"], name="core_dataac_risk_sc_c788d8_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ComplianceReport",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("HIPAA_ACCESS", "HIPAA Access Report"),
                            ("DATA_RETENTION", "Data Retention Report"),
                            ("SECURITY_AUDIT", "Security Audit Report"),
                            ("USER_ACTIVITY", "User Activity Report"),
                            ("SYSTEM_CHANGES", "System Changes Report"),
                        ],
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField()),
                ("summary", models.JSONField(help_text="Report summary statistics")),
                ("findings", models.JSONField(help_text="Detailed findings")),
                (
                    "recommendations",
                    models.JSONField(default=list, help_text="Recommended actions"),
                ),
                ("report_file_path", models.CharField(blank=True, max_length=500)),
                (
                    "file_hash",
                    models.CharField(
                        blank=True,
                        help_text="SHA-256 hash for integrity",
                        max_length=64,
                    ),
                ),
                (
                    "generated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["report_type", "created_at"],
                        name="core_compli_report__814465_idx",
                    ),
                    models.Index(
                        fields=["generated_by", "created_at"],
                        name="core_compli_generat_ec89f4_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="AuditEvent",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "event_id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, unique=True),
                ),
                (
                    "action_type",
                    models.CharField(
                        choices=[
                            ("CREATE", "Record Created"),
                            ("UPDATE", "Record Updated"),
                            ("DELETE", "Record Deleted"),
                            ("VIEW", "Record Viewed"),
                            ("LOGIN", "User Login"),
                            ("LOGOUT", "User Logout"),
                            ("LOGIN_FAILED", "Login Failed"),
                            ("PASSWORD_CHANGE", "Password Changed"),
                            ("PERMISSION_DENIED", "Permission Denied"),
                            ("ORDER_CREATED", "Order Created"),
                            ("ORDER_CONFIRMED", "Order Confirmed"),
                            ("ORDER_CANCELLED", "Order Cancelled"),
                            ("STOCK_RESERVED", "Stock Reserved"),
                            ("STOCK_ALLOCATED", "Stock Allocated"),
                            ("INVENTORY_ADJUSTED", "Inventory Adjusted"),
                            ("SYSTEM_START", "System Started"),
                            ("SYSTEM_STOP", "System Stopped"),
                            ("BACKUP_CREATED", "Backup Created"),
                            ("MIGRATION_RUN", "Migration Executed"),
                            ("SUSPICIOUS_ACTIVITY", "Suspicious Activity"),
                            ("DATA_EXPORT", "Data Exported"),
                            ("ADMIN_ACTION", "Administrative Action"),
                            ("BULK_OPERATION", "Bulk Operation"),
                        ],
                        db_index=True,
                        max_length=20,
                    ),
                ),
                (
                    "risk_level",
                    models.CharField(
                        choices=[
                            ("LOW", "Low Risk"),
                            ("MEDIUM", "Medium Risk"),
                            ("HIGH", "High Risk"),
                            ("CRITICAL", "Critical Risk"),
                        ],
                        db_index=True,
                        default="LOW",
                        max_length=10,
                    ),
                ),
                (
                    "user_email",
                    models.EmailField(
                        blank=True,
                        help_text="Stored for historical reference",
                        max_length=254,
                    ),
                ),
                (
                    "session_key",
                    models.CharField(blank=True, db_index=True, max_length=40),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(blank=True, db_index=True, null=True),
                ),
                ("user_agent", models.TextField(blank=True)),
                ("request_method", models.CharField(blank=True, max_length=10)),
                (
                    "request_path",
                    models.CharField(blank=True, db_index=True, max_length=500),
                ),
                (
                    "object_id",
                    models.CharField(blank=True, db_index=True, max_length=255),
                ),
                (
                    "object_repr",
                    models.CharField(
                        blank=True,
                        help_text="String representation of object",
                        max_length=500,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Human-readable description of the event"
                    ),
                ),
                (
                    "additional_data",
                    models.JSONField(
                        blank=True, default=dict, help_text="Additional context data"
                    ),
                ),
                (
                    "changed_fields",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="List of changed field names",
                    ),
                ),
                (
                    "old_values",
                    models.JSONField(
                        blank=True, default=dict, help_text="Previous values"
                    ),
                ),
                (
                    "new_values",
                    models.JSONField(blank=True, default=dict, help_text="New values"),
                ),
                (
                    "regulation_tags",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Applicable regulations (HIPAA, FDA, etc.)",
                    ),
                ),
                (
                    "retention_until",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this record can be purged",
                        null=True,
                    ),
                ),
                (
                    "is_sensitive",
                    models.BooleanField(
                        default=False, help_text="Contains sensitive data"
                    ),
                ),
                (
                    "process_id",
                    models.CharField(
                        blank=True, help_text="System process identifier", max_length=50
                    ),
                ),
                (
                    "correlation_id",
                    models.UUIDField(
                        blank=True,
                        db_index=True,
                        help_text="Groups related events",
                        null=True,
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="audit_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "audit_events",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["action_type", "created_at"],
                        name="audit_event_action__536b15_idx",
                    ),
                    models.Index(
                        fields=["user", "created_at"],
                        name="audit_event_user_id_8aca5d_idx",
                    ),
                    models.Index(
                        fields=["ip_address", "created_at"],
                        name="audit_event_ip_addr_03377f_idx",
                    ),
                    models.Index(
                        fields=["risk_level", "created_at"],
                        name="audit_event_risk_le_81a516_idx",
                    ),
                    models.Index(
                        fields=["content_type", "object_id"],
                        name="audit_event_content_196ec4_idx",
                    ),
                    models.Index(
                        fields=["correlation_id"], name="audit_event_correla_ba2ca4_idx"
                    ),
                    models.Index(
                        fields=["is_sensitive"], name="audit_event_is_sens_e0319b_idx"
                    ),
                ],
            },
        ),
    ]
