# Generated by Django 4.2.7 on 2025-09-26 06:24

import uuid

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models

import mptt.fields

import apps.core.audit_middleware


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("slug", models.SlugField(blank=True, max_length=255, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="products.category",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("sku", models.CharField(max_length=100, unique=True)),
                (
                    "stock_quantity",
                    models.PositiveIntegerField(
                        default=0, help_text="Total physical stock"
                    ),
                ),
                (
                    "reserved_quantity",
                    models.PositiveIntegerField(
                        default=0, help_text="Stock reserved for pending orders"
                    ),
                ),
                (
                    "allocated_quantity",
                    models.PositiveIntegerField(
                        default=0, help_text="Stock allocated for confirmed orders"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "track_inventory",
                    models.BooleanField(
                        default=True,
                        help_text="Whether to track inventory for this product",
                    ),
                ),
                (
                    "low_stock_threshold",
                    models.PositiveIntegerField(
                        default=10, help_text="Alert when stock falls below this level"
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="products.category",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
            bases=(apps.core.audit_middleware.AuditableMixin, models.Model),
        ),
        migrations.CreateModel(
            name="StockReservation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("quantity", models.PositiveIntegerField()),
                (
                    "reason",
                    models.CharField(default="Order reservation", max_length=255),
                ),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "order_id",
                    models.UUIDField(
                        blank=True, help_text="Related order ID", null=True
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reservations",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["product", "is_active"],
                        name="products_st_product_f7f698_idx",
                    ),
                    models.Index(
                        fields=["expires_at"], name="products_st_expires_817182_idx"
                    ),
                    models.Index(
                        fields=["order_id"], name="products_st_order_i_11ffe3_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="StockMovement",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "movement_type",
                    models.CharField(
                        choices=[
                            ("IN", "Stock In"),
                            ("OUT", "Stock Out"),
                            ("RESERVE", "Reserved"),
                            ("RELEASE", "Released"),
                            ("ALLOCATE", "Allocated"),
                            ("DEALLOCATE", "Deallocated"),
                            ("ADJUSTMENT", "Adjustment"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "quantity",
                    models.IntegerField(
                        help_text="Can be negative for outbound movements"
                    ),
                ),
                ("reason", models.CharField(max_length=255)),
                (
                    "reference_id",
                    models.UUIDField(
                        blank=True,
                        help_text="Reference to order, reservation, etc.",
                        null=True,
                    ),
                ),
                ("stock_after", models.PositiveIntegerField()),
                ("reserved_after", models.PositiveIntegerField()),
                ("allocated_after", models.PositiveIntegerField()),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stock_movements",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["product", "movement_type"],
                        name="products_st_product_0214a2_idx",
                    ),
                    models.Index(
                        fields=["created_at"], name="products_st_created_792bf6_idx"
                    ),
                    models.Index(
                        fields=["reference_id"], name="products_st_referen_e305d2_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(fields=["sku"], name="products_pr_sku_ca0cdc_idx"),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["category", "is_active"], name="products_pr_categor_50f5f1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["stock_quantity"], name="products_pr_stock_q_ba97b5_idx"
            ),
        ),
    ]
